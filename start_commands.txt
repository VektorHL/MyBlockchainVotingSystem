установить python версии 3.6
в терминале (cmd) выполнить команду: pip install flask==0.12.2 requests==2.18.4
в терминале прописать путь до корня проекта: cd <путь до корня проекта>

# путь до корня проекта (у меня)
cd C:\Users\Abrakadabra\Documents\GitHub\MyBlockchainVotingSystem\

# запуск блокчейна через терминал. можно запускать на разных машинах в пределах локальной сети, но тогда надо уже не локалхосты, а нормальные ip заносить в запрос.
# раньше работало даже так, сейчас не тестировал.
# при запуске на одной машине надо менять порт для каждого нового узла, например на +1
py -3.6 blockchain.py --port 5000
py -3.6 blockchain.py --port 5001

#
# это начальная версия программы без даже авторизации, идентификации голосов и хранения блокчейна в постоянной памяти.
# но суть и стиль написания кода, думаю, будут понятны
#

# использовал Postman, версия не важна


# основные запросы
#
localhost:5000/vote/randomize [GET] - случайным образом заносит от 0 до 4 голосов каждого вида ('yes' и 'no') в блокчейн
localhost:5000/results [GET] - выводит результаты голосования (подсчитывает занесённые голоса)
localhost:5000/chain [GET] - выводит все блоки цепи

localhost:5000/nodes [GET] - выводит список зарегистрированных узлов
localhost:5000/nodes/resolve [GET] - синхронизация цепи блокчейна с зарегистрированными узлами

localhost:5000/nodes/register [POST] - регистрация узлов, которые будут опрашиваться для синхронизации цепи
{
    "nodes": [
        "localhost:5000",
        "localhost:5001",
        "localhost:5002"
    ]
}
# столько узлов взято для примера, обработчика ошибок тут нет, 
# если занесенный узел (адрес\порт) не запущен, метод синхронизации цепи блокчейна между узлами работать не будет.
# поэтому перед занесением из списка убрать неактивные узлы и узел, с которого отправляется запрос (localhost:5000 в данном случае (в примере))

